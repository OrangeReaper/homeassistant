  # Weather prediction
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'date_time'
      - 'date_time_iso'
      - 'time_date'
      - 'time_utc'
      - 'beat'

  - platform: mqtt
    name: "andymote"
    state_topic: "andymote"

  - platform: mqtt
    name: "magenta"
    state_topic: "printer/magenta"
    force_update: true
  - platform: mqtt
    name: "black"
    state_topic: "printer/black"
    force_update: true
  - platform: mqtt
    name: "cyan"
    state_topic: "printer/cyan"
    force_update: true
  - platform: mqtt
    name: "yellow"
    state_topic: "printer/yellow"
    force_update: true
  - platform: template
    sensors:
      harmony_activity:
        value_template: >
          {% if is_state("remote.harmony_hub", 'on') %}
            {{ states.remote.harmony_hub.attributes.current_activity }}
          {% else %}
            PowerOff
          {% endif %}

  - platform: template
    sensors:
      bass_amp:
        value_template: >
          {% if is_state("sensor.harmony_activity", 'BluRay') %}
            on
          {% else %}
            {% if is_state("sensor.harmony_activity", 'Kodi') %}
              on
            {% else %}
              off
            {% endif %}
          {% endif %}

  - platform: template
    sensors:
      dark:
        friendly_name: "It's Dark"
        value_template: >-
          {% if (states.sensor.time.state > "09:00") and (states.sensor.time.state < "15:00") %}
            no
          {% else %}
            {% if states('sensor.shenzhen_neo_electronics_co_ltd_battery_powered_pir_sensor_v2_luminance') | int < 80 %}
              yes
            {% else %}
              {% if state_attr('sun.sun', 'elevation') < 0  %}
                yes
              {% else %}
                no
              {% endif %}
            {% endif %}
          {% endif %}
  - platform: template
    sensors:
      all_home:
        friendly_name: "All Home"
        value_template: >-
          {% if is_state('sensor.paula', 'home')  %}
            {% if is_state('sensor.andy', 'home') %}
              yes
            {% else %}
              no
            {% endif %}
          {% else %}
            no
          {% endif %}
  - platform: template
    sensors:
      paula:
        friendly_name: "Paula"
        value_template: >-
          {% if is_state('timer.paula_away', 'active')  %}
                home
          {% else %}
            {% if is_state('timer.paula_home', 'active')  %}
                home
            {% else %}
              {% if is_state('device_tracker.paula_phone_bt', 'home')  %}
                  home
              {% else %}
                {% if is_state('binary_sensor.paula_phone_wifi', 'on')  %}
                  home
                {% else %}
                  away
                {% endif %}
              {% endif %}
            {% endif %}
          {% endif %}              
  - platform: template
    sensors:
      andy:
        friendly_name: "Andy"
        value_template: >-
          {% if is_state('timer.andy_away', 'active')  %}
                home
          {% else %}
            {% if is_state('timer.andy_home', 'active')  %}
                home
            {% else %}
              {% if is_state('device_tracker.andy_phone_bt', 'home')  %}
                  home
              {% else %}
                {% if is_state('binary_sensor.andy_phone_wifi', 'on')  %}
                  home
                {% else %}
                  away
                {% endif %}
              {% endif %}
            {% endif %}
          {% endif %}
  - platform: template
    sensors:
      mancave_occupied:
        friendly_name: "ManCave Occupied"
        value_template: >-
          {% if states('binary_sensor.andymote') == "on" %}
            {% if states('sensor.andymote') == "Off"  %}
              no
            {% else %}
              yes
            {% endif %}
          {% else %}
            no
          {% endif %} 
  - platform: template
    sensors:
      mancave_kodi:
        friendly_name: "ManCave Kodi State"
        value_template: >-
          {% if states('sensor.andymote') == "Watch Kodi"  %}
              on
          {% else %}
              off
          {% endif %}
  - platform: template
    sensors:
      porch_pir_battery:
        friendly_name: "Porch PIR Battery"
        value_template: "{{ state_attr('zwave.porch_motion_sensor', 'battery_level')|int|default(75) }}"
        device_class: battery
        unit_of_measurement: '%'
  - platform: template
    sensors:
      hive_battery:
        friendly_name: "Hive Battery"
        value_template: '{{ states.climate.hive_temperature.attributes.battery | replace("%","") | int }}'
  - platform: template
    sensors:
      nextsunrise:
        friendly_name: 'Next Sunrise'
        value_template: >
          {{ as_timestamp(states.sun.sun.attributes.next_rising) | timestamp_custom(' %I:%M%p') | replace(" 0", "") }}
        icon_template: mdi:weather-sunset-up
      nextsunset:
        friendly_name: 'Next Sunset'
        value_template: >
          {{ as_timestamp(states.sun.sun.attributes.next_setting) | timestamp_custom(' %I:%M%p') | replace(" 0", "") }}
        icon_template: mdi:weather-sunset-down
      night_length_today:
        friendly_name: 'Night Length Today'
        value_template: >
          {{ (as_timestamp(state_attr('sun.sun','next_rising')) - as_timestamp(state_attr('sun.sun','next_setting')))| int  }}
      dark_offset:
        friendly_name: 'Dark Offset'
        value_template: >
          {{ ((states('sensor.night_length_today') | int - 26933 | int) * 0.058269399) | int  }}
      time_to_next_sunset:
        friendly_name: 'Time To Next Sunset'
        value_template: >
          {{ as_timestamp(state_attr('sun.sun','next_setting')) | int - as_timestamp(now()) | int  }}
      elevation:
        friendly_name: 'Sun Elevation'
        value_template: >
          {{ state_attr('sun.sun','elevation') }}
